{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducer.js","reducers/orderReducer.js","actions/userActions.js","components/SearchBar.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/AdminInfoScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_DETAIL_FAIL","USER_DETAIL_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loding","loading","payload","pages","page","error","productTopRated","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetail","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetail","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBar","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","document","location","href","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","heigth","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","slide","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","console","log","table","sm","md","lg","xl","AdminIndfoScreen","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","sx","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutStep","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","CheckoutSteps","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemPrice","shippingPrice","taxPrice","index","ld","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","itemsPrice","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUsers","striped","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","header","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b777d52a.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\nexport const PRODUCT_TOP_RESET = 'PRODUCT_TOP_RESET'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_DETAIL_REQUEST = \"USER_DETAIL_REQUEST\"\r\nexport const USER_DETAIL_SUCCESS = \"USER_DETAIL_SUCCESS\"\r\nexport const USER_DETAIL_FAIL = \"USER_DETAIL_FAIL\"\r\nexport const USER_DETAIL_RESET = \"USER_DETAIL_RESET\"\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\"\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\"\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\"\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\"\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\"\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\"\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\"\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\"\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\"","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productTopRatedReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n} from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducer'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productTopRated:productTopRatedReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetail: userDetailReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : []\r\n\r\nconst userInfoStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n} from '../constants/productConstants.js'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loding: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        //valuate cart has exist items\r\n        //has: only add new items\r\n        //dont has: add all new items\r\n        case CART_ADD_ITEM:\r\n\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(\r\n                x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(\r\n                        x => x.product === existItem.product\r\n                            ?\r\n                            item :\r\n                            x\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(\r\n                    (x) => x.product !== action.payload\r\n                ),\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAIL_REQUEST,\r\n    USER_DETAIL_SUCCESS,\r\n    USER_DETAIL_FAIL,\r\n    USER_DETAIL_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants.js'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailReducer = (state = { user: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_DETAIL_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAIL_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAIL_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAIL_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, user: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return {\r\n                user: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n    state = {\r\n        loading: true,\r\n        orderItems: [],\r\n        shippingAddress: {}\r\n    },\r\n    action\r\n\r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//User get all orders in Profile screen\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                order: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Admin get all orders in Orders Screen\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//Admin PUT order deliver condiion\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAIL_REQUEST,\r\n    USER_DETAIL_SUCCESS,\r\n    USER_DETAIL_FAIL,\r\n    USER_DETAIL_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants.js'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\n//------------------------Log in\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n//----------------------Log out\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAIL_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    document.location.href = '/'\r\n}\r\n\r\n//------------------------register\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, email, password },\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n        //After register auto log user in\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n//------------------------show user profile\r\nexport const getUserDetail = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAIL_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_DETAIL_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//------------------------Update user profile\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//------------------------Get list of users by Admin\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n//------------------------Delete a user by Admin\r\nexport const deleteUsers = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n//------------------------Update a user by Admin\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({\r\n            type: USER_DETAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nexport const SearchBar = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push(`/`)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control type='text' name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder=\"Search Products...\" className='mr-sm-2 ml-sm-5'>\r\n            </Form.Control>\r\n            <Button type='submit' variant='outline-light' className='btn p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\nexport default SearchBar","import react from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport { SearchBar } from './SearchBar'\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>Frank's Toilet Paper Depot</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                        {/* Direct access to the route props */}\r\n                        <Route render={({ history }) => <SearchBar history={history} />} />\r\n\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link className='mr-2'>\r\n                                    <i className='fas fa-shopping-cart mr-1'></i>Cart\r\n                                    </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username' className='mr-3'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Log Out</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to=\"/login\">\r\n                                        <Nav.Link><i className='fas fa-user mr-1 ml-3'></i>Sign In</Nav.Link>\r\n                                    </LinkContainer>\r\n                                )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='ADMIN' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userList'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productList'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderList'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                            <LinkContainer to=\"/admininfo\">\r\n                                <Nav.Link><i className='fas fa-question-circle mr-1'></i>Admin</Nav.Link>\r\n                            </LinkContainer>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Copyright &copy; Frank's Toilet Paper Depot</Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n//illustrate five starts & review text according to data \r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color: color }}\r\n                    className={value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color: color }}\r\n                    className={value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color: color }}\r\n                    className={value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color: color }}\r\n                    className={value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color: color }}\r\n                    className={value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'}>\r\n\r\n                </i>\r\n            </span>\r\n            <span className=\"ml-3\">{text ? text : ''}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Set default color for rating start\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n}\r\n//Set proptype avoiding messing up data type\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        <Card className='my-3 p-2 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                </Card.Text>\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{\r\n            width: '100px',\r\n            heigth: '100px',\r\n            margin: 'auto',\r\n            display: 'block'\r\n        }}>\r\n            <span className='st-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${x + 1}`\r\n                                    : `/page/${x + 1}`\r\n                                : `/admin/productlist/${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n} from '../constants/productConstants.js'\r\n\r\n//listproduct action\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST,\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const ListTopProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_TOP_REQUEST,\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products/`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { ListTopProduct } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(ListTopProduct())\r\n    }, [dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' slide='true' className='bg-dark'>\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))\r\n            }\r\n        </Carousel >\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keyword' content={keywords} />\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: \"Welcome to Frank's Toilet Paper Depot\",\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'toliet paper, creative toliet paper, toliet',\r\n}\r\n\r\nexport default Meta","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { Helmet } from 'react-helmet'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Meta from '../components/Meta'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? (\r\n                <ProductCarousel />\r\n            ) : (\r\n                    <Link to='/' className='btn btn-info'>\r\n                        Go Back\r\n                    </Link>\r\n                )}\r\n            <h1>latest Products</h1>\r\n            {loading\r\n                ? (<Loader></Loader>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (<>\r\n                        <Row>\r\n                            {console.log('%c Products List:', 'color:orange; font-wight:bold; font-size:20px')}\r\n                            {console.table(products)}\r\n                            {products.map((product) => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate\r\n                            pages={pages}\r\n                            page={page}\r\n                            keyword={keyword ? keyword : ''}\r\n                        />\r\n                    </>\r\n                    )\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import { Card, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst AdminIndfoScreen = () => {\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header>Hello World !</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title as=\"h1\">Experience full functions of this app by logging in as Admin </Card.Title>\r\n                    <Card.Text>\r\n                        Email : Admin@example.com</Card.Text>\r\n                    <Card.Text>Password: 1234</Card.Text>\r\n                    <Card.Text className=\"text-danger\">Please only delete products or users created by You</Card.Text>\r\n                    <Button variant=\"info\">\r\n                        <Link to='/login' className='btn-sm btn-info'>\r\n                            Go log-in\r\n                    </Link>\r\n                    </Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminIndfoScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n    listProductDetails,\r\n    createProductReview,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n//props here or Destructure\r\nconst ProductScreen = ({ history, match }) => {\r\n\r\n    //state for item quinities, ready for adding to cart\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n    const {\r\n        success: successProductReview,\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            createProductReview(match.params.id, {\r\n                rating,\r\n                comment,\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Link className='btn btn-info my-3' to='/'>\r\n                Go Back\r\n          </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                        <>\r\n                            <Meta title={product.name} />\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Rating\r\n                                                value={product.rating}\r\n                                                text={`${product.numReviews} reviews`}\r\n                                            />\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {[...Array(product.countInStock).keys()].map(\r\n                                                                    (x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    )\r\n                                                                )}\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    type='button'\r\n                                                    disabled={product.countInStock === 0}\r\n                                                >\r\n                                                    Add To Cart\r\n                        </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h2>Reviews</h2>\r\n                                    {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Write a Customer Review</h2>\r\n                                            {successProductReview && (\r\n                                                <Message variant='success'>\r\n                                                    Review submitted successfully\r\n                                                </Message>\r\n                                            )}\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {errorProductReview && (\r\n                                                <Message variant='danger'>{errorProductReview}</Message>\r\n                                            )}\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='3'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                          </Button>\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message>\r\n                                                        Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                                                    </Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n            {console.log('%c Reviews : ', 'color:orange; font-wight:bold; font-size:20px')}\r\n            {console.table(product.reviews)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        },\r\n    })\r\n\r\n    //Persist data to the browser’s local storage\r\n    localStorage.setItem('cartItems',\r\n        JSON.stringify(getState().cart.cartItems)\r\n    )\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems',\r\n        JSON.stringify(getState().cart.cartItems)\r\n    )\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress',\r\n        JSON.stringify(data)\r\n    )\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod',\r\n        JSON.stringify(data)\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n\r\n                            {console.log('%c Item In Cart: ', 'color:orange; font-wight:bold; font-size:20px')}\r\n                            {console.table(cartItems)}\r\n\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>{item.price}</Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control as='select' value={item.qty} onChange={(e) =>\r\n                                                dispatch(addToCart(item.product, Number(e.target.value)))}>{\r\n                                                    [...Array(item.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button type='button' variant='light'\r\n                                                onClick={() =>\r\n                                                    removeFromCartHandler(item.product)\r\n                                                }>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal\r\n                                ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                                items\r\n                            </h2>\r\n                            $\r\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed to Check Out\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col sx={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { login } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search\r\n        ? location.search.split('=')[1]\r\n        : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='success'>\r\n                    Sign In\r\n            </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?\r\n                    <Link\r\n                        to={redirect\r\n                            ? `/register?redirect=${redirect}`\r\n                            : '/register'}>\r\n                        <span className=\"sr-only text-dark\">unread messages</span>\r\n                           Register Now\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>)\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search\r\n        ? location.search.split('=')[1]\r\n        : '/'\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (<FormContainer>\r\n        <h1>Sign Up</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                    type='name'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='success'>\r\n                Register\r\n            </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n                Have an Account? <Link\r\n                    to={redirect\r\n                        ? `/login?redirect=${redirect}`\r\n                        : '/login'}>\r\n                    Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>)\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetail, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetail = useSelector((state) => state.userDetail)\r\n    const { loading, error, user } = userDetail\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetail('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n\r\n                {console.log('%c User: ', 'color:orange; font-wight:bold; font-size:20px')}\r\n                {console.table(user)}\r\n                {console.log('%c Orders: ', 'color:blue; font-wight:bold; font-size:20px')}\r\n                {console.table(orders)}\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password Address</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>\r\n                    {errorOrders}\r\n                </Message> : (\r\n                        <Table hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {console.log({ orders })}\r\n                                {orders.map((order) => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n                                        <td>\r\n                                            {order.isPaid ? (\r\n                                                order.paidAt.substring(0, 10)\r\n                                            ) : (\r\n                                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                )}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.isDelivered ? (\r\n                                                order.deliveredAt.substring(0, 10)\r\n                                            ) : (\r\n                                                    <i className='fas fa-times px-4' style={{ color: 'red' }}></i>\r\n                                                )}\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm' variant='info'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n            </Col>\r\n        </Row >\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutStep = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Sign In</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutStep\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            {/* //------------------Checkout steps component */}\r\n            <CheckoutSteps step1 step2/>\r\n            \r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>PostalCode</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter PostalCode'\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='success'>\r\n                    Continue\r\n            </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            {/* //------------------Checkout steps component */}\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <h1>Payment method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal'\r\n                            name='paymentMethod' value='PayPal' checked onChange={(e) =>\r\n                                setPaymentMethod(e.target.value)}>\r\n                        </Form.Check>\r\n                        <Form.Check type='radio' label='Stripe' id='Stripe'\r\n                            name='paymentMethod' value='Stripe' onChange={(e) =>\r\n                                setPaymentMethod(e.target.value)}>\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='success'>\r\n                    Continue\r\n            </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport Message from '../components/Message'\r\nimport { shippingAddress } from '../actions/cartActions'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch('')\r\n\r\n    //calcuate price \r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n    //make price end with .00\r\n    cart.itemPrice = addDecimals(cart.cartItems.reduce((acc, item) =>\r\n        acc + item.price * item.qty, 0))\r\n\r\n    //shipping price\r\n    cart.shippingPrice = cart.itemPrice > 30 ? 0 : 5\r\n\r\n    //tax price\r\n    cart.taxPrice = addDecimals(Number((0.13 * cart.itemPrice).toFixed(2)))\r\n\r\n    //total price\r\n    cart.totalPrice = (\r\n        Number(cart.itemPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    //Get order info from state\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemPrice: cart.itemPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        })\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address},\r\n                                {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ?\r\n                                <Message>Your cart is empty</Message>\r\n                                : (<ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col ld={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    {/* <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link> */}\r\n                                                    {item.name}\r\n                                                </Col>\r\n\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>)\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n// import { shippingAddress } from '../actions/cartActions'\r\nimport {\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n\r\n    const orderId = match.params.id\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    const dispatch = useDispatch('')\r\n\r\n    //Get order info from state\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        //calcuate price \r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        //make price end with .00\r\n        order.itemsPrice = addDecimals(\r\n            order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        //Order is not there Or usre has payed, dispatch order details\r\n        if (!order || successPay || successDeliver) {\r\n            //Rest stage to avoid infinite loop(keep refreshing page)\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            //Check is paid or not\r\n        } else if (!order.isPaid) {\r\n            //Check paypal script exist\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver, history])\r\n\r\n    //Handle pay order action\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    )\r\n            : <>\r\n                <h1>Order {order._id}</h1>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <ListGroup variant='flush'>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Shipping</h2>\r\n                                <p>\r\n                                    <strong>Name: </strong>{order.user.name}</p>\r\n                                <p>\r\n                                    <a href={`mailto: ${order.user.email}`}>{order.user.email}</a>\r\n                                </p>\r\n                                <p>\r\n                                    <strong>Address: </strong>\r\n                                    {order.shippingAddress.address},\r\n                                {order.shippingAddress.city}{' '}\r\n                                    {order.shippingAddress.postalCode},{' '}\r\n                                    {order.shippingAddress.country}\r\n                                </p>\r\n                                {order.isDelivered ? (\r\n                                    <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                ) : (\r\n                                        <Message variant='danger'>Not Delivered</Message>\r\n                                    )}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Payment Method</h2>\r\n                                <p>\r\n                                    <strong>Method: </strong>\r\n                                    {order.paymentMethod}\r\n                                </p>\r\n                                {order.isPaid ? (\r\n                                    <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                ) : (\r\n                                        <Message variant='danger'>Not Paid</Message>\r\n                                    )}\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Items</h2>\r\n                                {order.orderItems.length === 0 ?\r\n                                    <Message>Order is empty</Message>\r\n                                    : (<ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col ld={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        {item.name}\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>)\r\n                                }\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items</Col>\r\n                                        <Col>${order.itemPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {!order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                        {loadingPay && <Loader />}\r\n                                        {!sdkReady ? <Loader /> : (\r\n                                            <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                            />\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                  </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                <ListGroup className=\"card text-black bg-danger mb-3\">\r\n                                    <ListGroup.Item>\r\n                                        <h4 className=\"card-header\">Notice</h4>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item className=\"text-info\">\r\n                                        <p className=\"card-text\">PayPal implmented here is Sandbox version, feel free to \"pay\" for your favoriate toliet paper order with no charge</p>\r\n                                        <p className=\"card-text\">Log PayPal in with : </p>\r\n                                        <p className=\"card-text\">Email: DummyEmail@example.com</p>\r\n                                        <p className=\"card-text\">Password: 1*UjDU6*</p>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUsers } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector((state) => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector((state) => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    //prevent regular user access admin screen\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUsers(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {\r\n                loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-lg table-hover'>\r\n                                <thead>\r\n                                    <tr className=\"table-success\">\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>EMAIL</th>\r\n                                        <th>ADMIN</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {console.log('%c Users: ', 'color:orange; font-wight:bold; font-size:20px')}\r\n                                    {console.table(users)}\r\n                                    {users.map((user) => (\r\n                                        <tr key={user._id} className=\"table-light\">\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>\r\n                                                <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                                            </td>\r\n                                            <td>\r\n                                                {user.isAdmin ? (\r\n                                                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                                ) : (\r\n                                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                    )}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm mr-2'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button\r\n                                                    variant='danger'\r\n                                                    className='btn-sm'\r\n                                                    onClick={() => deleteHandler(user._id)}\r\n                                                >\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetail, updateUser } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetail = useSelector((state) => state.userDetail)\r\n    const { loading, error, user } = userDetail\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userList')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetail(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, dispatch, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateUser({ _id: userId, name, email, isAdmin })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userList' className='btn btn-info my-3'>\r\n                Go Back\r\n        </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='success'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state) => state.productList)\r\n    const { loading,\r\n        error,\r\n        products,\r\n        page,\r\n        pages\r\n    } = productList\r\n\r\n    const productDelete = useSelector((state) => state.productDelete)\r\n\r\n    const { loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete\r\n    } = productDelete\r\n\r\n    const productCreate = useSelector((state) => state.productCreate)\r\n    const { loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    //prevent regular user access admin screen\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n        if (successCreate) {\r\n            history.push(`admin/products/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n    }, [dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        createdProduct,\r\n        successCreate,\r\n        pageNumber\r\n    ])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n    return (\r\n        <>\r\n            <Row className='align-item-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i>Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {\r\n                loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                            <>\r\n                                <Table striped responsive className='table table-lg table-hover'>\r\n                                    <thead>\r\n                                        <tr className=\"table-primary\">\r\n                                            <th>ID</th>\r\n                                            <th>NAME</th>\r\n                                            <th>PRICE</th>\r\n                                            <th>CATEGORY</th>\r\n                                            <th>BRAND</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {console.log('%c Products: ', 'color:orange; font-wight:bold; font-size:20px')}\r\n                                        {console.table(products)}\r\n                                        {products.map((product) => (\r\n                                            <tr key={product._id} className=\"table-info\">\r\n                                                <td>{product._id}</td>\r\n                                                <td>{product.name}</td>\r\n                                                <td>$ {product.price}</td>\r\n                                                <td>{product.category}</td>\r\n                                                <td>{product.brand}</td>\r\n                                                <td>\r\n                                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                        <Button variant='light' className='btn-sm'>\r\n                                                            <i className='fas fa-edit'></i>\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n                                                    <Button\r\n                                                        variant='danger'\r\n                                                        className='btn-sm'\r\n                                                        onClick={() => deleteHandler(product._id)}\r\n                                                    >\r\n                                                        <i className='fas fa-trash'></i>\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Paginate\r\n                                    pages={pages}\r\n                                    page={page}\r\n                                    isAdmin={true}\r\n                                />\r\n                            </>\r\n                        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const [price, setPrice] = useState(0)\r\n    const [name, setName] = useState('')\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productList')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n    }, [product, dispatch, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock\r\n            })\r\n        )\r\n    }\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                header: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setImage(data)\r\n            setUploading(false)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-info my-3'>\r\n                Go Back\r\n        </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter image url'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                ></Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                ></Form.File>\r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Count In Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter countInStock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector((state) => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    //prevent regular user access admin screen\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <>\r\n            <h1>Users' Orders</h1>\r\n            {\r\n                loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-lg table-hover'>\r\n                                <thead>\r\n                                    <tr className=\"table-success\">\r\n                                        <th>ID</th>\r\n                                        <th>USER</th>\r\n                                        <th>DATE</th>\r\n                                        <th>TOTAL</th>\r\n                                        <th>PAID</th>\r\n                                        <th>DELIVERED</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {console.log('%c Orders:', 'color:orange; font-wight:bold; font-size:20px')}\r\n                                    {console.table(orders)}\r\n                                    {orders.map((order) => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.user && order.user.name}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>\r\n                                                {order.isPaid ? (\r\n                                                    order.paidAt.substring(0, 10)\r\n                                                ) : (\r\n                                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                    )}\r\n                                            </td>\r\n                                            <td>\r\n                                                {order.isDelivered ? (\r\n                                                    order.deliveredAt.substring(0, 10)\r\n                                                ) : (\r\n                                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                                    )}\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button variant='info' className='btn-sm'>\r\n                                                        Details\r\n                    </Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport AdminIndfoScreen from './screens/AdminInfoScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nconst App = () => {\n  return (\n    <Router>\n      <>\n        <Header />\n        <main className='py-5'>\n          <Container>\n            <Route path='/' component={HomeScreen} exact />\n            {/* Search route */}\n            <Route path='/search/:keyword' component={HomeScreen} exact />\n            {/* Page */}\n            <Route path='/page/:pageNumber' component={HomeScreen} exact />\n            <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n            <Route path='/admininfo' component={AdminIndfoScreen} />\n\n            <Route path='/cart/:id?' component={CartScreen} />\n            <Route path='/order/:id' component={OrderScreen} />\n            <Route path='/shipping' component={ShippingScreen} />\n            <Route path='/payment' component={PaymentScreen} />\n            <Route path='/placeorder' component={PlaceOrderScreen} />\n\n            <Route path='/login' component={LoginScreen} />\n            <Route path='/register' component={RegisterScreen} />\n            <Route path='/profile' component={ProfileScreen} />\n            <Route path='/product/:id' component={ProductScreen} />\n\n            {/* Admin Screens */}\n            <Route path='/admin/userList' component={UserListScreen} />\n            <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n            <Route path='/admin/productList' component={ProductListScreen} exact />\n            <Route path='/admin/productList/:pageNumber' component={ProductListScreen} exact />\n\n            <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n            <Route path='/admin/orderList' component={OrderListScreen} />\n\n          </Container>\n        </main>\n        <Footer />\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store.js'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}